openapi: 3.0.0
info:
  title: Rental Store REST Services Application
  description:
    Simple RESTful web services for a Rental Store Application
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
    description: Local dev server
    
paths:

  /customer/{customer_id}:
    put:
      summary: Update customer information by customeer_id
      parameters: 
        - name: customer_id
          in: path
          required: true
          description: Id of the customer to update
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: Customer successfully updated.
        '400':
          description: Customer not found
    delete:
      summary: Deletes customer by given Id
      parameters: 
        - name: customer_id
          in: path
          required: true
          description: Id of the customer to delete
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Customer successfully deleted.
        '400':
          description: Customer not found
    get:
      summary: Retrieves customer by id
      parameters: 
        - name: customer_id
          in: path
          required: true
          description: Id of the customer to retrieve
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Customer successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Customer not found
     
  /customer:
    get:
      summary: Retrieves list of all customers
      responses:
        '200':
          description: All customers retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    post:
      summary: Creates a new customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Customer added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid request syntax
        '422':
          description: Incomplete; Required field(s) missing
      
  /item:
    get:
      summary: Retrieves Item Object
      responses:
        '200':
          description: Item retrived successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: not found
    post:
      summary: Create new item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '201':
          description: Item created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Invalid request syntax
        '422':
          description: Incomplete; Required field(s) missing
          
  /item/{item_id}:
    put:
      summary: Updates item by item_id
      parameters: 
        - name: item_id
          in: path
          required: true
          description: Id of item to update
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          description: Item successfully updated.
        '400':
          description: Invalid request syntax
        '422':
          description: Incomplete; Required field(s) missing
    delete:
      summary: Deletes item by item_id
      parameters: 
        - name: item_id
          in: path
          required: true
          description: Id of the item to delete
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Item deleted successfully
        '400':
          description: Item not found
    get:
      summary: Retrieves Item by item_id
      parameters: 
        - name: item_id
          in: path
          required: true
          description: Id of item to be retrieved
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Item retrieved successfully 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Item not found
          
  /invoice:
    post:
      summary: Creates an invoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        '201':
          description: Inovice created successfully. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete information. Some required fields missing
          
  /invoice/{invoice_id}:     
    delete:
      summary: Deletes invoice by invoice_id
      parameters: 
        - name: invoice_id
          in: path
          required: true
          description: Id of invoice to delete
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Invoice deleted successfully 
        '400':
          description: Invoice not found
          
  /invoice/{customer_id}:
    get:
      summary: Retrieves Invoices by associated customer_id
      parameters: 
        - name: customer_id
          in: path
          required: true
          description: customer_id of invoice to retrive
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Invoice successfully retrived
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          description: Invoice not found
                  
  /invoice_item:
    post:
      summary: Creates an invoice item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice_item'
      responses:
        '201':
          description: Inovice item created successfully. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice_item'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete information. Some required fields missing

components:
  schemas:
    Customer:
      properties:
        customer_id:
          type: integer
          nullable: false
        first_name:
          type: string
          nullable: false
        last_name: 
          type: string
          nullable: false
        email: 
          type: string
          nullable: false
        company: 
          type: string
          nullable: false
        phone: 
          type: string
          nullable: false
      discriminator:
        propertyName: customer_id
      required: 
        - customer_id
        - first_name
        - last_name
        - email
        - company
        - phone
    Item:
      properties:
        item_id:
          type: integer
          nullable: false
        name:
          type: string
          nullable: false
        description: 
          type: string
        daily_rate:
          type: number 
          nullable: false
      required: 
        - item_id
        - name
        - daily_rate
    
    Invoice: 
      properties:
        invoice_id:
          type: integer
          nullable: false
        customer_id:
          $ref: '#/components/schemas/Customer'
          description: This is foreign key
        order_date: 
          type: string
          format: date
          nullable: false
        pickup_date:
          type: string
          format: date
          nullable: false
        return_date: 
          type: string
          format: date
          nullable: false
        late_fee:
          type: number
          nullable: false
      required: 
        - invoice_id
        - customer_id
        - order_date
        - pickup_date
        - return_date
        - late_fee
      
    Invoice_item:
      properties:
        invoice_item_id:
          type: integer
          nullable: false
        invoice_id:
          $ref: '#/components/schemas/Invoice'
          description: This is foreign key
        item_id int:
          $ref: '#/components/schemas/Item'
          description: This is foreign key
        quantity:
          type: integer
          nullable: false
        unit_rate:
          type: number
          nullable: false
        discount:
          type: number
          nullable: false
      required: 
        - invoice_item_id 
        - invoice_id
        - item_id
        - quantity
        - unit_rate
        - discount
        
            
          
        
        
        
        
        
     
    
    

        
